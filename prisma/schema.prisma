// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Category {
  id String @id @default(uuid())
  name String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("categories")
  products Product[]
}

model Product {
  id String @id @default(uuid())
  name String
  price Float
  description String
  banner String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category Category @relation(fields: [category_id], references: [id])

  @@map("products")
  category_id String
  Items Item[]
}

model Table {
  id          String    @id @default(uuid())
  number      Int       @unique
  status      String    @default("available") // available, occupied, reserved
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  orders      Order[]

  @@map("tables")
}

model Order {
  id          String    @id @default(uuid())
  table_id    String
  table       Table     @relation(fields: [table_id], references: [id])
  status      String    @default("draft") // draft, in_progress, completed, closed
  name        String?
  total       Float?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  items       Item[]
  payments    Payment[]

  @@map("orders")
}

model Item {
  id          String    @id @default(uuid())
  amount      Int
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  order       Order     @relation(fields: [order_id], references: [id])
  product     Product   @relation(fields: [product_id], references: [id])

  @@map("items")
  order_id    String
  product_id  String
}

model Payment {
  id             String    @id @default(uuid())
  order_id       String
  order          Order     @relation(fields: [order_id], references: [id])
  amount         Float
  payment_method String
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  @@map("payments")
}